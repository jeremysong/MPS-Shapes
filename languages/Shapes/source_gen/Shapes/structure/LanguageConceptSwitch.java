package Shapes.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int Canvas = 0;
  public static final int Circle = 1;
  public static final int Color = 2;
  public static final int ColorReference = 3;
  public static final int Point = 4;
  public static final int Polygon = 5;
  public static final int Rectangle = 6;
  public static final int Shape = 7;
  public static final int Square = 8;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x7143c4151117487cL, 0xb5cff1a234b7a31dL);
    builder.put(0x60782db15492eb2fL, Canvas);
    builder.put(0x60782db15492eb16L, Circle);
    builder.put(0x60782db154960c83L, Color);
    builder.put(0x60782db154974078L, ColorReference);
    builder.put(0xdb2f68134547bbdL, Point);
    builder.put(0xdb2f681345485b1L, Polygon);
    builder.put(0xdb2f6813442c6e9L, Rectangle);
    builder.put(0x60782db15492eb15L, Shape);
    builder.put(0x60782db15492eb20L, Square);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
